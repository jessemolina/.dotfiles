:PROPERTIES:
:header-args: :results pp
:END:
#+title: .dotfiles

My personal dotfile configurations; managed using [[https://www.gnu.org/software/stow/][Stow]].

* Overview

Directories within =.dotfiles= coincide to applications installed on the system.

#+begin_example sh
: ├── emacs
: ├── skhd
: ├── tmux
: ├── yabai
: └── zsh
#+end_example


Each application directory contains configuration files, structured to mirror their install path relative to the home directory.

** Example

Assume that =~/.config/yabai/yabairc= needs to be tracked as part of the yabai dotfiles.

Under =.dotfiles/yabai=, the configuration file is saved as =.config/yabai/yabairc=.

#+begin_src sh
: yabai
: └── .config
:     └── yabai
:         └── yabairc
#+end_src

From the .dotfiles directory, the `stow` command can be called to build the symlinks appropriately.

#+begin_src sh
cd ~/.dotfiles
stow yabai
#+end_src

* Setup
** Operating System
*** MacOS
Install stow using [[https://formulae.brew.sh/formula/stow][homebrew]].

#+begin_src sh
brew install stow
#+end_src

** Clone
Clone the dotfiles directory onto the home directory.

#+begin_src sh
git clone https://github.com/jessemolina/.dotfiles ~/
#+end_src

** Stow
*** All
Every configuration within =.dotfiles= can be staged with the following command.
Use this approach selectively to avoid risks in file conflicts and linking obselete files.

#+begin_src sh
[ -d ~/.dotfiles ] && cd ~/.dotfiles && stow */
#+end_src

*** Individually
Configuration files for the corresponding applications can be installed one at a time.

#+begin_src sh
cd ~/.dotfiles
stow zsh
#+end_src
